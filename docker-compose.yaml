networks:
  ticketz:

volumes:
  redis_data:
  postgres_data:
  backend_public:
  backend_private:
  minio_data:

services:

  backend:
    image: ghcr.io/ticketz-oss/ticketz-backend:pro
    volumes:
      - backend_public:/usr/src/app/public
      - backend_private:/usr/src/app/private
    env_file:
      - .env-backend
    restart: always
    depends_on:
      - postgres
      - redis
    networks:
      - ticketz

  frontend:
    image: ghcr.io/ticketz-oss/ticketz-frontend:pro
    volumes:
      - backend_public:/var/www/backend-public
      - ./confs/frontend-ticketz.d:/etc/nginx/ticketz.d
    env_file:
      - .env-frontend
    restart: always
    depends_on:
      - backend
    networks:
      - ticketz

  postgres:
    image: postgres:16-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-ticketz}
      - POSTGRES_DB=${POSTGRES_DB:-ticketz}
      - POSTGRES_HOST_AUTH_METHOD=trust
      - TZ=${TZ:-America/Sao_Paulo}
    expose:
      - 5432
    restart: always
    networks:
      - ticketz

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    expose:
      - 6379
    restart: always
    volumes:
      - redis_data:/data
    networks:
      - ticketz

  cloudflared:
    image: cloudflare/cloudflared
    restart: always
    command: tunnel run
    env_file:
      - .env-cloudflared
    depends_on:
      - backend
      - frontend
    networks:
      - ticketz

  watchtower:
    image: containrrr/watchtower
    profiles: ["do-not-start"]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 1800 --cleanup
    restart: unless-stopped

  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    restart: always
    env_file:
      - .env-integrations
      - .env-secrets
      - .env-minio
    expose:
      - 9000
      - 9001
    volumes:
      - minio_data:/data
    networks:
      - ticketz

  # This service just makes sure a bucket with the right policies is created
  createbuckets:
    image: minio/mc
    env_file:
      - .env-integrations
      - .env-secrets
      - .env-minio
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 10;
      /usr/bin/mc config host add minio http://minio:9000 \$\{MINIO_ROOT_USER} \$\{MINIO_ROOT_PASSWORD};
      /usr/bin/mc mb minio/typebot;
      /usr/bin/mc anonymous set public minio/typebot/public;
      exit 0;
      "
    networks:
      - ticketz

  typebot-builder:
    image: baptistearno/typebot-builder:latest
    restart: always
    depends_on:
      - postgres
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    env_file:
      - .env-integrations
      - .env-secrets
      - .env-typebot-common
      - .env-typebot-builder
    networks:
      - ticketz

  typebot-viewer:
    image: baptistearno/typebot-viewer:latest
    restart: always
    env_file:
      - .env-integrations
      - .env-secrets
      - .env-typebot-common
    networks:
      - ticketz
